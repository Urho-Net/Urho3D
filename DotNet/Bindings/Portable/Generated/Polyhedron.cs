// WARNING - AUTOGENERATED - DO NOT EDIT
// 
// Polyhedron.cs
// 
using System;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Urho.Urho2D;
using Urho.Gui;
using Urho.Resources;
using Urho.IO;
using Urho.Navigation;
using Urho.Network;
using File = Urho.IO.File;
using ListView = Urho.Gui.ListView;
using Button = Urho.Gui.Button;

namespace Urho
{
	/// <summary>
	/// A convex volume built from polygon faces.
	/// </summary>
	public unsafe partial class Polyhedron
	{
		unsafe partial void OnPolyhedronCreated ();

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr Polyhedron_Polyhedron ();

		[Preserve]
		public Polyhedron ()
		{
			Runtime.Validate (typeof(Polyhedron));
			handle = Polyhedron_Polyhedron ();
			OnPolyhedronCreated ();
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr Polyhedron_Polyhedron0 (IntPtr polyhedron);

		[Preserve]
		public Polyhedron (Polyhedron polyhedron)
		{
			Runtime.Validate (typeof(Polyhedron));
			handle = Polyhedron_Polyhedron0 ((object)polyhedron == null ? IntPtr.Zero : polyhedron.Handle);
			OnPolyhedronCreated ();
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr Polyhedron_Polyhedron1 (ref Urho.BoundingBox box);

		[Preserve]
		public Polyhedron (Urho.BoundingBox box)
		{
			Runtime.Validate (typeof(Polyhedron));
			handle = Polyhedron_Polyhedron1 (ref box);
			OnPolyhedronCreated ();
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr Polyhedron_Polyhedron2 (IntPtr frustum);

		[Preserve]
		public Polyhedron (Frustum frustum)
		{
			Runtime.Validate (typeof(Polyhedron));
			handle = Polyhedron_Polyhedron2 ((object)frustum == null ? IntPtr.Zero : frustum.Handle);
			OnPolyhedronCreated ();
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void Polyhedron_Define (IntPtr handle, ref Urho.BoundingBox box);

		/// <summary>
		/// Define from a bounding box.
		/// </summary>
		public void Define (Urho.BoundingBox box)
		{
			Runtime.ValidateObject (this);
			Polyhedron_Define (handle, ref box);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void Polyhedron_Define3 (IntPtr handle, IntPtr frustum);

		/// <summary>
		/// Define from a frustum.
		/// </summary>
		public void Define (Frustum frustum)
		{
			Runtime.ValidateObject (this);
			Polyhedron_Define3 (handle, (object)frustum == null ? IntPtr.Zero : frustum.Handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void Polyhedron_AddFace (IntPtr handle, ref Urho.Vector3 v0, ref Urho.Vector3 v1, ref Urho.Vector3 v2);

		/// <summary>
		/// Add a triangle face.
		/// </summary>
		public void AddFace (Urho.Vector3 v0, Urho.Vector3 v1, Urho.Vector3 v2)
		{
			Runtime.ValidateObject (this);
			Polyhedron_AddFace (handle, ref v0, ref v1, ref v2);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void Polyhedron_AddFace4 (IntPtr handle, ref Urho.Vector3 v0, ref Urho.Vector3 v1, ref Urho.Vector3 v2, ref Urho.Vector3 v3);

		/// <summary>
		/// Add a quadrilateral face.
		/// </summary>
		public void AddFace (Urho.Vector3 v0, Urho.Vector3 v1, Urho.Vector3 v2, Urho.Vector3 v3)
		{
			Runtime.ValidateObject (this);
			Polyhedron_AddFace4 (handle, ref v0, ref v1, ref v2, ref v3);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void Polyhedron_Clip (IntPtr handle, ref Urho.Plane plane);

		/// <summary>
		/// Clip with a plane.
		/// </summary>
		public void Clip (Urho.Plane plane)
		{
			Runtime.ValidateObject (this);
			Polyhedron_Clip (handle, ref plane);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void Polyhedron_Clip5 (IntPtr handle, ref Urho.BoundingBox box);

		/// <summary>
		/// Clip with a bounding box.
		/// </summary>
		public void Clip (Urho.BoundingBox box)
		{
			Runtime.ValidateObject (this);
			Polyhedron_Clip5 (handle, ref box);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void Polyhedron_Clip6 (IntPtr handle, IntPtr frustum);

		/// <summary>
		/// Clip with a frustum.
		/// </summary>
		public void Clip (Frustum frustum)
		{
			Runtime.ValidateObject (this);
			Polyhedron_Clip6 (handle, (object)frustum == null ? IntPtr.Zero : frustum.Handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void Polyhedron_Clear (IntPtr handle);

		/// <summary>
		/// Clear all faces.
		/// </summary>
		public void Clear ()
		{
			Runtime.ValidateObject (this);
			Polyhedron_Clear (handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void Polyhedron_Transform (IntPtr handle, ref Urho.Matrix3 transform);

		/// <summary>
		/// Transform with a 3x3 matrix.
		/// </summary>
		public void Transform (Urho.Matrix3 transform)
		{
			Runtime.ValidateObject (this);
			Polyhedron_Transform (handle, ref transform);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void Polyhedron_Transform7 (IntPtr handle, ref Urho.Matrix3x4 transform);

		/// <summary>
		/// Transform with a 3x4 matrix.
		/// </summary>
		public void Transform (Urho.Matrix3x4 transform)
		{
			Runtime.ValidateObject (this);
			Polyhedron_Transform7 (handle, ref transform);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr Polyhedron_Transformed (IntPtr handle, ref Urho.Matrix3 transform);

		/// <summary>
		/// Return transformed with a 3x3 matrix.
		/// </summary>
		public Polyhedron Transformed (Urho.Matrix3 transform)
		{
			Runtime.ValidateObject (this);
			return new Polyhedron (Polyhedron_Transformed (handle, ref transform));
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr Polyhedron_Transformed8 (IntPtr handle, ref Urho.Matrix3x4 transform);

		/// <summary>
		/// Return transformed with a 3x4 matrix.
		/// </summary>
		public Polyhedron Transformed (Urho.Matrix3x4 transform)
		{
			Runtime.ValidateObject (this);
			return new Polyhedron (Polyhedron_Transformed8 (handle, ref transform));
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern bool Polyhedron_Empty (IntPtr handle);

		/// <summary>
		/// Return whether is empty.
		/// </summary>
		public bool Empty ()
		{
			Runtime.ValidateObject (this);
			return Polyhedron_Empty (handle);
		}
	}
}
