// WARNING - AUTOGENERATED - DO NOT EDIT
// 
// VGTextRow.cs
// 
using System;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Urho.Urho2D;
using Urho.Gui;
using Urho.Resources;
using Urho.IO;
using Urho.Navigation;
using Urho.Network;
using File = Urho.IO.File;
using ListView = Urho.Gui.ListView;
using Button = Urho.Gui.Button;

namespace Urho
{
	/// <summary>
	/// Destruct.
	/// </summary>
	public unsafe partial class VGTextRow : UrhoObject
	{
		unsafe partial void OnVGTextRowCreated ();

		[Preserve]
		public VGTextRow (IntPtr handle) : base (handle)
		{
			OnVGTextRowCreated ();
		}

		[Preserve]
		protected VGTextRow (UrhoObjectFlag emptyFlag) : base (emptyFlag)
		{
			OnVGTextRowCreated ();
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern int VGTextRow_GetType (IntPtr handle);

		private StringHash UrhoGetType ()
		{
			Runtime.ValidateRefCounted (this);
			return new StringHash (VGTextRow_GetType (handle));
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr VGTextRow_GetTypeName (IntPtr handle);

		private string GetTypeName ()
		{
			Runtime.ValidateRefCounted (this);
			return Marshal.PtrToStringAnsi (VGTextRow_GetTypeName (handle));
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern int VGTextRow_GetTypeStatic ();

		private static StringHash GetTypeStatic ()
		{
			Runtime.Validate (typeof(VGTextRow));
			return new StringHash (VGTextRow_GetTypeStatic ());
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr VGTextRow_GetTypeNameStatic ();

		private static string GetTypeNameStatic ()
		{
			Runtime.Validate (typeof(VGTextRow));
			return Marshal.PtrToStringAnsi (VGTextRow_GetTypeNameStatic ());
		}

		[Preserve]
		public VGTextRow () : this (Application.CurrentContext)
		{
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr VGTextRow_VGTextRow (IntPtr context);

		[Preserve]
		public VGTextRow (Context context) : base (UrhoObjectFlag.Empty)
		{
			Runtime.Validate (typeof(VGTextRow));
			handle = VGTextRow_VGTextRow ((object)context == null ? IntPtr.Zero : context.Handle);
			Runtime.RegisterObject (this);
			OnVGTextRowCreated ();
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr VGTextRow_VGTextRow0 (IntPtr context, string txt, float width_, float min_, float max_);

		[Preserve]
		public VGTextRow (Context context, string txt, float width_, float min_, float max_) : base (UrhoObjectFlag.Empty)
		{
			Runtime.Validate (typeof(VGTextRow));
			handle = VGTextRow_VGTextRow0 ((object)context == null ? IntPtr.Zero : context.Handle, txt, width_, min_, max_);
			Runtime.RegisterObject (this);
			OnVGTextRowCreated ();
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr VGTextRow_GetText (IntPtr handle);

		private string GetText ()
		{
			Runtime.ValidateRefCounted (this);
			return Marshal.PtrToStringAnsi (VGTextRow_GetText (handle));
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void VGTextRow_SetText (IntPtr handle, string str);

		private void SetText (string str)
		{
			Runtime.ValidateRefCounted (this);
			VGTextRow_SetText (handle, str);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern float VGTextRow_GetWidth (IntPtr handle);

		private float GetWidth ()
		{
			Runtime.ValidateRefCounted (this);
			return VGTextRow_GetWidth (handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void VGTextRow_SetWidth (IntPtr handle, float w);

		private void SetWidth (float w)
		{
			Runtime.ValidateRefCounted (this);
			VGTextRow_SetWidth (handle, w);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern float VGTextRow_GetMin (IntPtr handle);

		private float GetMin ()
		{
			Runtime.ValidateRefCounted (this);
			return VGTextRow_GetMin (handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void VGTextRow_SetMin (IntPtr handle, float m);

		private void SetMin (float m)
		{
			Runtime.ValidateRefCounted (this);
			VGTextRow_SetMin (handle, m);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern float VGTextRow_GetMax (IntPtr handle);

		private float GetMax ()
		{
			Runtime.ValidateRefCounted (this);
			return VGTextRow_GetMax (handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void VGTextRow_SetMax (IntPtr handle, float m);

		private void SetMax (float m)
		{
			Runtime.ValidateRefCounted (this);
			VGTextRow_SetMax (handle, m);
		}

		public override StringHash Type {
			get {
				return UrhoGetType ();
			}
		}

		public override string TypeName {
			get {
				return GetTypeName ();
			}
		}

		[Preserve]
		public static StringHash TypeStatic {
			get {
				return GetTypeStatic ();
			}
		}

		public static string TypeNameStatic {
			get {
				return GetTypeNameStatic ();
			}
		}

		public string Text {
			get {
				return GetText ();
			}
			set {
				SetText (value);
			}
		}

		public float Width {
			get {
				return GetWidth ();
			}
			set {
				SetWidth (value);
			}
		}

		public float Min {
			get {
				return GetMin ();
			}
			set {
				SetMin (value);
			}
		}

		public float Max {
			get {
				return GetMax ();
			}
			set {
				SetMax (value);
			}
		}
	}
}
