// WARNING - AUTOGENERATED - DO NOT EDIT
// 
// UnknownComponent.cs
// 
using System;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Urho.Urho2D;
using Urho.Gui;
using Urho.Resources;
using Urho.IO;
using Urho.Navigation;
using Urho.Network;
using File = Urho.IO.File;
using ListView = Urho.Gui.ListView;
using Button = Urho.Gui.Button;

namespace Urho
{
	/// <summary>
	/// Placeholder for allowing unregistered components to be loaded
	/// </summary>
	public unsafe partial class UnknownComponent : Component
	{
		unsafe partial void OnUnknownComponentCreated ();

		[Preserve]
		public UnknownComponent (IntPtr handle) : base (handle)
		{
			OnUnknownComponentCreated ();
		}

		[Preserve]
		protected UnknownComponent (UrhoObjectFlag emptyFlag) : base (emptyFlag)
		{
			OnUnknownComponentCreated ();
		}

		[Preserve]
		public UnknownComponent () : this (Application.CurrentContext)
		{
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr UnknownComponent_UnknownComponent (IntPtr context);

		[Preserve]
		public UnknownComponent (Context context) : base (UrhoObjectFlag.Empty)
		{
			Runtime.Validate (typeof(UnknownComponent));
			handle = UnknownComponent_UnknownComponent ((object)context == null ? IntPtr.Zero : context.Handle);
			Runtime.RegisterObject (this);
			OnUnknownComponentCreated ();
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void UnknownComponent_RegisterObject (IntPtr context);

		/// <summary>
		/// Register object factory.
		/// 
		/// </summary>
		public new static void RegisterObject (Context context)
		{
			Runtime.Validate (typeof(UnknownComponent));
			UnknownComponent_RegisterObject ((object)context == null ? IntPtr.Zero : context.Handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern int UnknownComponent_GetType (IntPtr handle);

		/// <summary>
		/// Return type of the stored component.
		/// </summary>
		private StringHash UrhoGetType ()
		{
			Runtime.ValidateRefCounted (this);
			return new StringHash (UnknownComponent_GetType (handle));
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr UnknownComponent_GetTypeName (IntPtr handle);

		/// <summary>
		/// Return type name of the stored component.
		/// </summary>
		private string GetTypeName ()
		{
			Runtime.ValidateRefCounted (this);
			return Marshal.PtrToStringAnsi (UnknownComponent_GetTypeName (handle));
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern bool UnknownComponent_Load_File (IntPtr handle, IntPtr source);

		/// <summary>
		/// Load from binary data. Return true if successful.
		/// </summary>
		public override bool Load (File source)
		{
			Runtime.ValidateRefCounted (this);
			return UnknownComponent_Load_File (handle, (object)source == null ? IntPtr.Zero : source.Handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern bool UnknownComponent_Load_MemoryBuffer (IntPtr handle, IntPtr source);

		/// <summary>
		/// Load from binary data. Return true if successful.
		/// </summary>
		public override bool Load (MemoryBuffer source)
		{
			Runtime.ValidateRefCounted (this);
			return UnknownComponent_Load_MemoryBuffer (handle, (object)source == null ? IntPtr.Zero : source.Handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern bool UnknownComponent_LoadXML (IntPtr handle, IntPtr source);

		/// <summary>
		/// Load from XML data. Return true if successful.
		/// </summary>
		public override bool LoadXml (XmlElement source)
		{
			Runtime.ValidateRefCounted (this);
			return UnknownComponent_LoadXML (handle, (object)source == null ? IntPtr.Zero : source.Handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern bool UnknownComponent_Save_File (IntPtr handle, IntPtr dest);

		/// <summary>
		/// Save as binary data. Return true if successful.
		/// </summary>
		public override bool Save (File dest)
		{
			Runtime.ValidateRefCounted (this);
			return UnknownComponent_Save_File (handle, (object)dest == null ? IntPtr.Zero : dest.Handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern bool UnknownComponent_Save_MemoryBuffer (IntPtr handle, IntPtr dest);

		/// <summary>
		/// Save as binary data. Return true if successful.
		/// </summary>
		public override bool Save (MemoryBuffer dest)
		{
			Runtime.ValidateRefCounted (this);
			return UnknownComponent_Save_MemoryBuffer (handle, (object)dest == null ? IntPtr.Zero : dest.Handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern bool UnknownComponent_SaveXML (IntPtr handle, IntPtr dest);

		/// <summary>
		/// Save as XML data. Return true if successful.
		/// </summary>
		public override bool SaveXml (XmlElement dest)
		{
			Runtime.ValidateRefCounted (this);
			return UnknownComponent_SaveXML (handle, (object)dest == null ? IntPtr.Zero : dest.Handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void UnknownComponent_SetTypeName (IntPtr handle, string typeName);

		/// <summary>
		/// Initialize the type name. Called by Node when loading.
		/// </summary>
		public void SetTypeName (string typeName)
		{
			Runtime.ValidateRefCounted (this);
			UnknownComponent_SetTypeName (handle, typeName);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void UnknownComponent_SetType (IntPtr handle, int typeHash);

		/// <summary>
		/// Initialize the type hash only when type name not known. Called by Node when loading.
		/// </summary>
		public void SetType (StringHash typeHash)
		{
			Runtime.ValidateRefCounted (this);
			UnknownComponent_SetType (handle, typeHash.Code);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern bool UnknownComponent_GetUseXML (IntPtr handle);

		/// <summary>
		/// Return whether was loaded using XML data.
		/// </summary>
		private bool GetUseXml ()
		{
			Runtime.ValidateRefCounted (this);
			return UnknownComponent_GetUseXML (handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern int UnknownComponent_GetTypeStatic ();

		/// <summary>
		/// Return static type.
		/// </summary>
		private static StringHash GetTypeStatic ()
		{
			Runtime.Validate (typeof(UnknownComponent));
			return new StringHash (UnknownComponent_GetTypeStatic ());
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr UnknownComponent_GetTypeNameStatic ();

		/// <summary>
		/// Return static type name.
		/// </summary>
		private static string GetTypeNameStatic ()
		{
			Runtime.Validate (typeof(UnknownComponent));
			return Marshal.PtrToStringAnsi (UnknownComponent_GetTypeNameStatic ());
		}

		/// <summary>
		/// Return type of the stored component.
		/// </summary>
		public override StringHash Type {
			get {
				return UrhoGetType ();
			}
		}

		/// <summary>
		/// Return type name of the stored component.
		/// </summary>
		public override string TypeName {
			get {
				return GetTypeName ();
			}
		}

		/// <summary>
		/// Return whether was loaded using XML data.
		/// </summary>
		public bool UseXML {
			get {
				return GetUseXml ();
			}
		}

		/// <summary>
		/// Return static type.
		/// </summary>
		[Preserve]
		public new static StringHash TypeStatic {
			get {
				return GetTypeStatic ();
			}
		}

		/// <summary>
		/// Return static type name.
		/// </summary>
		public new static string TypeNameStatic {
			get {
				return GetTypeNameStatic ();
			}
		}
	}
}
