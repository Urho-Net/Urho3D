// WARNING - AUTOGENERATED - DO NOT EDIT
// 
// VGCanvas.cs
// 
using System;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Urho.Urho2D;
using Urho.Gui;
using Urho.Resources;
using Urho.IO;
using Urho.Navigation;
using Urho.Network;

namespace Urho
{
	/// <summary>
	/// Construct.
	/// </summary>
	public unsafe partial class VGCanvas : VGElement
	{
		unsafe partial void OnVGCanvasCreated ();

		[Preserve]
		public VGCanvas (IntPtr handle) : base (handle)
		{
			OnVGCanvasCreated ();
		}

		[Preserve]
		protected VGCanvas (UrhoObjectFlag emptyFlag) : base (emptyFlag)
		{
			OnVGCanvasCreated ();
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern int VGCanvas_GetType (IntPtr handle);

		private StringHash UrhoGetType ()
		{
			Runtime.ValidateRefCounted (this);
			return new StringHash (VGCanvas_GetType (handle));
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr VGCanvas_GetTypeName (IntPtr handle);

		private string GetTypeName ()
		{
			Runtime.ValidateRefCounted (this);
			return Marshal.PtrToStringAnsi (VGCanvas_GetTypeName (handle));
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern int VGCanvas_GetTypeStatic ();

		private static StringHash GetTypeStatic ()
		{
			Runtime.Validate (typeof(VGCanvas));
			return new StringHash (VGCanvas_GetTypeStatic ());
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr VGCanvas_GetTypeNameStatic ();

		private static string GetTypeNameStatic ()
		{
			Runtime.Validate (typeof(VGCanvas));
			return Marshal.PtrToStringAnsi (VGCanvas_GetTypeNameStatic ());
		}

		[Preserve]
		public VGCanvas () : this (Application.CurrentContext)
		{
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr VGCanvas_VGCanvas (IntPtr context);

		[Preserve]
		public VGCanvas (Context context) : base (UrhoObjectFlag.Empty)
		{
			Runtime.Validate (typeof(VGCanvas));
			handle = VGCanvas_VGCanvas ((object)context == null ? IntPtr.Zero : context.Handle);
			Runtime.RegisterObject (this);
			OnVGCanvasCreated ();
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void VGCanvas_RegisterObject (IntPtr context);

		/// <summary>
		/// Register object factory.
		/// 
		/// </summary>
		public new static void RegisterObject (Context context)
		{
			Runtime.Validate (typeof(VGCanvas));
			VGCanvas_RegisterObject ((object)context == null ? IntPtr.Zero : context.Handle);
		}

		public override StringHash Type {
			get {
				return UrhoGetType ();
			}
		}

		public override string TypeName {
			get {
				return GetTypeName ();
			}
		}

		[Preserve]
		public new static StringHash TypeStatic {
			get {
				return GetTypeStatic ();
			}
		}

		public new static string TypeNameStatic {
			get {
				return GetTypeNameStatic ();
			}
		}
	}
}
