// WARNING - AUTOGENERATED - DO NOT EDIT
// 
// CheckBox.cs
// 
using System;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using Urho.Urho2D;
using Urho.Gui;
using Urho.Resources;
using Urho.IO;
using Urho.Navigation;
using Urho.Network;
using File = Urho.IO.File;
using ListView = Urho.Gui.ListView;
using Button = Urho.Gui.Button;

namespace Urho.Gui
{
	/// <summary>
	/// %UI element that can be toggled between unchecked and checked state.
	/// </summary>
	public unsafe partial class CheckBox : BorderImage
	{
		unsafe partial void OnCheckBoxCreated ();

		[Preserve]
		public CheckBox (IntPtr handle) : base (handle)
		{
			OnCheckBoxCreated ();
		}

		[Preserve]
		protected CheckBox (UrhoObjectFlag emptyFlag) : base (emptyFlag)
		{
			OnCheckBoxCreated ();
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern int CheckBox_GetType (IntPtr handle);

		private StringHash UrhoGetType ()
		{
			Runtime.ValidateRefCounted (this);
			return new StringHash (CheckBox_GetType (handle));
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr CheckBox_GetTypeName (IntPtr handle);

		private string GetTypeName ()
		{
			Runtime.ValidateRefCounted (this);
			return Marshal.PtrToStringAnsi (CheckBox_GetTypeName (handle));
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern int CheckBox_GetTypeStatic ();

		private static StringHash GetTypeStatic ()
		{
			Runtime.Validate (typeof(CheckBox));
			return new StringHash (CheckBox_GetTypeStatic ());
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr CheckBox_GetTypeNameStatic ();

		private static string GetTypeNameStatic ()
		{
			Runtime.Validate (typeof(CheckBox));
			return Marshal.PtrToStringAnsi (CheckBox_GetTypeNameStatic ());
		}

		[Preserve]
		public CheckBox () : this (Application.CurrentContext)
		{
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern IntPtr CheckBox_CheckBox (IntPtr context);

		[Preserve]
		public CheckBox (Context context) : base (UrhoObjectFlag.Empty)
		{
			Runtime.Validate (typeof(CheckBox));
			handle = CheckBox_CheckBox ((object)context == null ? IntPtr.Zero : context.Handle);
			Runtime.RegisterObject (this);
			OnCheckBoxCreated ();
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void CheckBox_RegisterObject (IntPtr context);

		/// <summary>
		/// Register object factory.
		/// 
		/// </summary>
		public new static void RegisterObject (Context context)
		{
			Runtime.Validate (typeof(CheckBox));
			CheckBox_RegisterObject ((object)context == null ? IntPtr.Zero : context.Handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void CheckBox_SetChecked (IntPtr handle, bool enable);

		/// <summary>
		/// Set checked state.
		/// 
		/// </summary>
		private void SetChecked (bool enable)
		{
			Runtime.ValidateRefCounted (this);
			CheckBox_SetChecked (handle, enable);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void CheckBox_SetCheckedOffset (IntPtr handle, ref Urho.IntVector2 offset);

		/// <summary>
		/// Set checked image offset.
		/// 
		/// </summary>
		private void SetCheckedOffset (Urho.IntVector2 offset)
		{
			Runtime.ValidateRefCounted (this);
			CheckBox_SetCheckedOffset (handle, ref offset);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern void CheckBox_SetCheckedOffset0 (IntPtr handle, int x, int y);

		/// <summary>
		/// Set checked image offset.
		/// </summary>
		public void SetCheckedOffset (int x, int y)
		{
			Runtime.ValidateRefCounted (this);
			CheckBox_SetCheckedOffset0 (handle, x, y);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern bool CheckBox_IsChecked (IntPtr handle);

		/// <summary>
		/// Return whether is checked.
		/// 
		/// </summary>
		private bool IsChecked ()
		{
			Runtime.ValidateRefCounted (this);
			return CheckBox_IsChecked (handle);
		}

		[DllImport (Consts.NativeImport, CallingConvention = CallingConvention.Cdecl)]
		internal static extern 
#if __WEB__
Urho.IntVector2 *
#else
Urho.IntVector2
#endif
 CheckBox_GetCheckedOffset (IntPtr handle);

		/// <summary>
		/// Return checked image offset.
		/// 
		/// </summary>
		private Urho.IntVector2 GetCheckedOffset ()
		{
			Runtime.ValidateRefCounted (this);
			return 
#if __WEB__
*CheckBox_GetCheckedOffset
#else
CheckBox_GetCheckedOffset
#endif
 (handle);
		}

		public override StringHash Type {
			get {
				return UrhoGetType ();
			}
		}

		public override string TypeName {
			get {
				return GetTypeName ();
			}
		}

		[Preserve]
		public new static StringHash TypeStatic {
			get {
				return GetTypeStatic ();
			}
		}

		public new static string TypeNameStatic {
			get {
				return GetTypeNameStatic ();
			}
		}

		/// <summary>
		/// Return whether is checked.
		/// 
		/// Or
		/// Set checked state.
		/// 
		/// </summary>
		public bool Checked {
			get {
				return IsChecked ();
			}
			set {
				SetChecked (value);
			}
		}

		/// <summary>
		/// Return checked image offset.
		/// 
		/// Or
		/// Set checked image offset.
		/// 
		/// </summary>
		public Urho.IntVector2 CheckedOffset {
			get {
				return GetCheckedOffset ();
			}
			set {
				SetCheckedOffset (value);
			}
		}
	}
}
